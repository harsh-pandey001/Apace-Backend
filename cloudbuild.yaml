steps:
  # Install dependencies and run tests
  - name: 'node:18-alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        npm ci
        npm run lint || true
        npm test || true

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--tag=gcr.io/$PROJECT_ID/apace-backend:$BUILD_ID'
      - '--tag=gcr.io/$PROJECT_ID/apace-backend:latest'
      - '--platform=linux/amd64'
      - '.'

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/apace-backend:$BUILD_ID'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/apace-backend:latest'


  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'apace-backend-working'
      - '--image=gcr.io/$PROJECT_ID/apace-backend:$BUILD_ID'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=5000'
      - '--memory=512Mi'
      - '--cpu=1000m'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--set-env-vars=NODE_ENV=production'
      - '--set-env-vars=DATABASE_HOST=34.173.53.157'
      - '--set-env-vars=DATABASE_PORT=3306'
      - '--set-env-vars=DATABASE_USER=test_user'
      - '--set-env-vars=DATABASE_PASSWORD=test123'
      - '--set-env-vars=DATABASE_NAME=apace_test'
      - '--set-env-vars=JWT_SECRET=$$JWT_SECRET'
      - '--set-env-vars=JWT_REFRESH_SECRET=$$JWT_REFRESH_SECRET'
      - '--set-env-vars=JWT_EXPIRES_IN=$$JWT_EXPIRES_IN'
      - '--set-env-vars=REFRESH_TOKEN_EXPIRES_IN=$$REFRESH_TOKEN_EXPIRES_IN'
      - '--set-env-vars=REDIS_HOST=34.172.121.211'
      - '--set-env-vars=REDIS_PORT=6379'
      - '--set-env-vars=REDIS_PASSWORD=$$REDIS_PASSWORD'
      - '--set-env-vars=CORS_ORIGIN=$$CORS_ORIGIN'
      - '--set-env-vars=CACHE_ENABLED=true'
      - '--set-env-vars=CACHE_TTL_DEFAULT=300'
      - '--set-env-vars=DEPLOYMENT_TIMESTAMP=${BUILD_ID}'
      - '--timeout=300'
      - '--concurrency=80'
      - '--vpc-egress=all'
    secretEnv: ['JWT_SECRET', 'JWT_REFRESH_SECRET', 'JWT_EXPIRES_IN', 'REFRESH_TOKEN_EXPIRES_IN', 'REDIS_PASSWORD', 'CORS_ORIGIN']

# Store the built image
images:
  - 'gcr.io/$PROJECT_ID/apace-backend:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/apace-backend:latest'

# Secret environment variables
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/JWT_SECRET/versions/latest
      env: 'JWT_SECRET'
    - versionName: projects/$PROJECT_ID/secrets/JWT_REFRESH_SECRET/versions/latest
      env: 'JWT_REFRESH_SECRET'
    - versionName: projects/$PROJECT_ID/secrets/JWT_EXPIRES_IN/versions/latest
      env: 'JWT_EXPIRES_IN'
    - versionName: projects/$PROJECT_ID/secrets/REFRESH_TOKEN_EXPIRES_IN/versions/latest
      env: 'REFRESH_TOKEN_EXPIRES_IN'
    - versionName: projects/$PROJECT_ID/secrets/REDIS_PASSWORD/versions/latest
      env: 'REDIS_PASSWORD'
    - versionName: projects/$PROJECT_ID/secrets/CORS_ORIGIN/versions/latest
      env: 'CORS_ORIGIN'

options:
  logging: CLOUD_LOGGING_ONLY