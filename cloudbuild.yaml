steps:
  # Install dependencies and run tests
  - name: 'node:18-alpine'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        npm ci
        npm run lint || true
        npm test || true

  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '--tag=gcr.io/$PROJECT_ID/apace-backend:$BUILD_ID'
      - '--tag=gcr.io/$PROJECT_ID/apace-backend:latest'
      - '--platform=linux/amd64'
      - '.'

  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/apace-backend:$BUILD_ID'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/apace-backend:latest'

  # Run database migrations
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        # Create a temporary job for migrations
        gcloud run jobs create migration-job-$BUILD_ID \
          --image=gcr.io/$PROJECT_ID/apace-backend:$BUILD_ID \
          --region=us-central1 \
          --memory=512Mi \
          --cpu=1000m \
          --set-env-vars NODE_ENV=production \
          --set-env-vars DATABASE_HOST=$$DATABASE_HOST \
          --set-env-vars DATABASE_PORT=$$DATABASE_PORT \
          --set-env-vars DATABASE_USER=$$DATABASE_USER \
          --set-env-vars DATABASE_PASSWORD=$$DATABASE_PASSWORD \
          --set-env-vars DATABASE_NAME=$$DATABASE_NAME \
          --command npm \
          --args run,db:migrate || true

        # Execute the migration
        gcloud run jobs execute migration-job-$BUILD_ID \
          --region=us-central1 \
          --wait || true

        # Clean up the job
        gcloud run jobs delete migration-job-$BUILD_ID \
          --region=us-central1 \
          --quiet || true
    secretEnv: ['DATABASE_HOST', 'DATABASE_PORT', 'DATABASE_USER', 'DATABASE_PASSWORD', 'DATABASE_NAME']

  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'apace-backend'
      - '--image=gcr.io/$PROJECT_ID/apace-backend:$BUILD_ID'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--memory=512Mi'
      - '--cpu=1000m'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--set-env-vars=NODE_ENV=production'
      - '--set-env-vars=DATABASE_HOST=$$DATABASE_HOST'
      - '--set-env-vars=DATABASE_PORT=$$DATABASE_PORT'
      - '--set-env-vars=DATABASE_USER=$$DATABASE_USER'
      - '--set-env-vars=DATABASE_PASSWORD=$$DATABASE_PASSWORD'
      - '--set-env-vars=DATABASE_NAME=$$DATABASE_NAME'
      - '--set-env-vars=JWT_SECRET=$$JWT_SECRET'
      - '--set-env-vars=JWT_REFRESH_SECRET=$$JWT_REFRESH_SECRET'
      - '--set-env-vars=JWT_EXPIRES_IN=$$JWT_EXPIRES_IN'
      - '--set-env-vars=REFRESH_TOKEN_EXPIRES_IN=$$REFRESH_TOKEN_EXPIRES_IN'
      - '--set-env-vars=REDIS_HOST=$$REDIS_HOST'
      - '--set-env-vars=REDIS_PORT=$$REDIS_PORT'
      - '--set-env-vars=REDIS_PASSWORD=$$REDIS_PASSWORD'
      - '--set-env-vars=CORS_ORIGIN=$$CORS_ORIGIN'
      - '--set-env-vars=CACHE_ENABLED=true'
      - '--set-env-vars=CACHE_TTL_DEFAULT=300'
      - '--timeout=300'
      - '--concurrency=80'
    secretEnv: ['DATABASE_HOST', 'DATABASE_PORT', 'DATABASE_USER', 'DATABASE_PASSWORD', 'DATABASE_NAME', 'JWT_SECRET', 'JWT_REFRESH_SECRET', 'JWT_EXPIRES_IN', 'REFRESH_TOKEN_EXPIRES_IN', 'REDIS_HOST', 'REDIS_PORT', 'REDIS_PASSWORD', 'CORS_ORIGIN']

# Store the built image
images:
  - 'gcr.io/$PROJECT_ID/apace-backend:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/apace-backend:latest'

# Secret environment variables
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_HOST/versions/latest
      env: 'DATABASE_HOST'
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_PORT/versions/latest
      env: 'DATABASE_PORT'
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_USER/versions/latest
      env: 'DATABASE_USER'
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_PASSWORD/versions/latest
      env: 'DATABASE_PASSWORD'
    - versionName: projects/$PROJECT_ID/secrets/DATABASE_NAME/versions/latest
      env: 'DATABASE_NAME'
    - versionName: projects/$PROJECT_ID/secrets/JWT_SECRET/versions/latest
      env: 'JWT_SECRET'
    - versionName: projects/$PROJECT_ID/secrets/JWT_REFRESH_SECRET/versions/latest
      env: 'JWT_REFRESH_SECRET'
    - versionName: projects/$PROJECT_ID/secrets/JWT_EXPIRES_IN/versions/latest
      env: 'JWT_EXPIRES_IN'
    - versionName: projects/$PROJECT_ID/secrets/REFRESH_TOKEN_EXPIRES_IN/versions/latest
      env: 'REFRESH_TOKEN_EXPIRES_IN'
    - versionName: projects/$PROJECT_ID/secrets/REDIS_HOST/versions/latest
      env: 'REDIS_HOST'
    - versionName: projects/$PROJECT_ID/secrets/REDIS_PORT/versions/latest
      env: 'REDIS_PORT'
    - versionName: projects/$PROJECT_ID/secrets/REDIS_PASSWORD/versions/latest
      env: 'REDIS_PASSWORD'
    - versionName: projects/$PROJECT_ID/secrets/CORS_ORIGIN/versions/latest
      env: 'CORS_ORIGIN'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'