version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: apace-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-prodRootPass2024!}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-apace_db}
      MYSQL_USER: ${MYSQL_USER:-apace_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-prodApacePass2024!}
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - apace-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: apace-redis
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    volumes:
      - redis-data:/data
    networks:
      - apace-network
    command: >
      sh -c "
        if [ -n \"$$REDIS_PASSWORD\" ]; then
          redis-server --appendonly yes --requirepass $$REDIS_PASSWORD
        else
          redis-server --appendonly yes
        fi
      "
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  backend:
    image: gcr.io/ayush-bot/apace-backend:latest
    container_name: apace-backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=${MYSQL_USER:-apace_user}
      - DATABASE_PASSWORD=${MYSQL_PASSWORD:-prodApacePass2024!}
      - DATABASE_NAME=${MYSQL_DATABASE:-apace_db}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN:-7d}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://34.44.169.87}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - CACHE_ENABLED=true
      - CACHE_TTL_DEFAULT=300
      - FCM_PROJECT_ID=${FCM_PROJECT_ID:-}
      - FCM_SERVICE_ACCOUNT_KEY=${FCM_SERVICE_ACCOUNT_KEY:-}
      - FCM_ENABLED=${FCM_ENABLED:-false}
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
    networks:
      - apace-network
    command: >
      sh -c "
        echo 'Waiting for database and Redis...' &&
        sleep 15 &&
        npm run db:migrate &&
        npm run db:seed &&
        node server.js
      "

  admin-panel:
    image: gcr.io/ayush-bot/apace-admin:latest
    container_name: apace-admin
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    environment:
      - REACT_APP_API_URL=http://34.44.169.87:5000
    networks:
      - apace-network

networks:
  apace-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local